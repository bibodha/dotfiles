# Set prefix to ctrl-J
unbind C-b
set -g prefix M-j
bind M-j send-prefix

set -g bell-action none
set -g visual-bell off

# Set window title
set-option -g mouse-select-pane on
set-option -g mouse-select-window on

# Enable mouse support
set-window-option -g mode-mouse on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Enable copy/paste
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Vertical Split
bind-key v split-window -h -c '#{pane_current_path}'â€¨
bind-key b split-window -c '#{pane_current_path}'

# No delay for escape key press
set -sg escape-time 0

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
